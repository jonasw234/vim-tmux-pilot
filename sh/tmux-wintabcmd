# The MIT License (MIT)
#
# Copyright (c) 2018 Urbain Vaes
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#!/bin/sh

function send {
    echo "$1" "$2" >> ~/.wintab_log
    if [ "$2" = "dry" ]; then
        echo "$1"
    else
        eval "$1"
    fi
    exit 0
}

key=$1
dryrun=$2

# select-pane
case $key in
    "h" ) direction=left;  pane_cmd=L ;;
    "j" ) direction=down;  pane_cmd=D ;;
    "k" ) direction=up;    pane_cmd=U ;;
    "l" ) direction=right; pane_cmd=R ;;
esac

no_neighbour=$(tmux run-shell "echo #{pane_at_$direction}")

if [ "$no_neighbour" = 0 ]; then
    send "tmux select-pane -$pane_cmd" "$dryrun"
fi

# select-window
if [ "$WINTAB_MODE" != 'winonly' ]; then

    case $key in
        "h" ) win_cmd=p ;;
        "l" ) win_cmd=n ;;
    esac

    iwin=$(tmux run-shell "echo #{window_index}")
    nwin=$(tmux run-shell "echo #{session_windows}")

    if [ "$key" = l ] && [ "$iwin" -lt $(( nwin - 1 )) ] \
        || { [ "$key" = h ] && [ "$iwin" -gt 0 ]; }; then
        send "tmux select-window -$win_cmd" "$dryrun"
    fi
fi

# new pane
if [ "${WINTAB_NEW:-win}" = pane ]; then

    case $key in
        "h" ) split_cmd=bh ;;
        "j" ) split_cmd=v  ;;
        "k" ) split_cmd=bv ;;
        "l" ) split_cmd=h  ;;
    esac

    send "tmux split-window -$split_cmd" "$dryrun"
fi

# new window
if [ "${WINTAB_NEW:-win}" = win ]; then

    case $key in
        "h" ) new_cmd="tmux new-window -ad; tmux swap-window -s 1 -t 0" ;;
        "l" ) new_cmd="tmux new-window -a" ;;
    esac

    send "$new_cmd" "$dryrun"
fi

send "tmux send-keys C-$key" "$dryrun"

# vim: ft=sh
